extends layout

block content
    div.container-lg#title
        h1 We got the #[span Antzer] to all your problems.
    div.container-lg#form-area
        div.form-container
            div.container-lg
                h1.formTitle What classes are you interested in?
            each val in [1, 2, 3, 4]
                div.wrapper
                    div.courseinput(id="course" + val)
                        span.input.input--yoshiko
                            input#input-1.input__field.input__field--yoshiko(type='text' maxlength=3 placeholder="College")
                            label.input__label.input__label--yoshiko(for='input-1')
                                span.input__label-content.input__label-content--yoshiko(data-content="COLLEGE") COLLEGE
                        span.input.input--yoshiko
                            input#input-2.input__field.input__field--yoshiko(type='text' maxlength=2 placeholder="Dept.")
                            label.input__label.input__label--yoshiko(for='input-2')
                                span.input__label-content.input__label-content--yoshiko(data-content="DEPARTMENT") DEPARTMENT
                        span.input.input--yoshiko
                            input#input-3.input__field.input__field--yoshiko(type='text' maxlength=3 placeholder="Class No.")
                            label.input__label.input__label--yoshiko(for='input-3')
                                span.input__label-content.input__label-content--yoshiko(data-content="COURSE NO.") COURSE NO.
                            span.feedback
                                i.fa.fa-spinner.fa-pulse.fa-3x.fa-fw
                                span.sr-only Loading...
            div.nextContainer
                button.next NEXT
                    i.fa.fa-chevron-right
        script(src='../javascripts/classie.js')
        script.
            (function() {
                if (!String.prototype.trim) {
                    (function() {
                        var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
                        String.prototype.trim = function() {
                            return this.replace(rtrim, '');
                        };
                    })();
                }
                [].slice.call( document.querySelectorAll( 'input.input__field' ) ).forEach( function( inputEl ) {
                    if( inputEl.value.trim() !== '' ) {
                        classie.add( inputEl.parentNode, 'input--filled' );
                    }
                    inputEl.addEventListener( 'focus', onInputFocus );
                    inputEl.addEventListener( 'blur', onInputBlur );
                });
                function onInputFocus(ev) {
                    classie.add( ev.target.parentNode, 'input--filled' );
                }
                function onInputBlur( ev ) {
                    if( ev.target.value.trim() === '' ) {
                        classie.remove( ev.target.parentNode, 'input--filled' );
                    }
                }
            })();
		
